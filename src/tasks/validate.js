const {
    diagnosticQuery,
    monitorChannels,
    testSupabaseConnection,
    testYoutubeAuth,
    processComments,
    processLeads
} = require('./monitorChannels');

const logger = require('../utils/logger');

async function validateAll() {
    try {
        logger.info('üöÄ Iniciando valida√ß√£o completa do sistema...\n');

        // 1. Validar conex√µes
        logger.info('1Ô∏è‚É£ Validando conex√µes b√°sicas...');
        
        logger.info('   ‚Üí Testando Supabase...');
        const supabaseOk = await testSupabaseConnection();
        if (!supabaseOk) throw new Error('Falha na conex√£o com Supabase');
        
        logger.info('   ‚Üí Testando YouTube...');
        const youtubeOk = await testYoutubeAuth(37);
        if (!youtubeOk) throw new Error('Falha na autentica√ß√£o do YouTube');

        // 2. Diagn√≥stico do projeto
        logger.info('\n2Ô∏è‚É£ Executando diagn√≥stico do projeto...');
        await diagnosticQuery();

        // 3. Teste de monitoramento
        logger.info('\n3Ô∏è‚É£ Testando monitoramento de canais...');
        const monitorResult = await monitorChannels(37);
        if (!monitorResult.success) {
            throw new Error(`Falha no monitoramento: ${monitorResult.error}`);
        }

        // 4. Teste de processamento de coment√°rios
        logger.info('\n4Ô∏è‚É£ Testando processamento de coment√°rios...');
        const commentsResult = await processComments(37);
        if (!commentsResult) {
            throw new Error('Falha no processamento de coment√°rios');
        }

        // 5. Teste de processamento de leads
        logger.info('\n5Ô∏è‚É£ Testando processamento de leads...');
        const leadsResult = await processLeads(37);
        if (!leadsResult) {
            throw new Error('Falha no processamento de leads');
        }

        // 6. Valida√ß√£o final
        logger.success('\n‚úÖ Todos os testes completados com sucesso!');
        logger.info('\nResumo da valida√ß√£o:');
        logger.info('- Conex√µes: OK');
        logger.info('- Diagn√≥stico: OK');
        logger.info('- Monitoramento: OK');
        logger.info('- Processamento de Coment√°rios: OK');
        logger.info('- Processamento de Leads: OK');

    } catch (error) {
        logger.error('\n‚ùå Erro durante a valida√ß√£o:', error);
        process.exit(1);
    }
}

// Executar valida√ß√£o
validateAll();